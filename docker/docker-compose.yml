# version: "3.8"

# services:
#   zookeeper:
#     image: bitnami/zookeeper:3.9
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       ALLOW_ANONYMOUS_LOGIN: "yes"

#   kafka:
#     image: bitnami/kafka:3.7
#     container_name: kafka
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
#       KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#       KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
#       ALLOW_PLAINTEXT_LISTENER: "yes"
#     extra_hosts:
#       - "host.docker.internal:host-gateway"

version: "3.8"

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 # Use 'kafka' for service link
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  streamlit_app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: streamlit_app
    ports:
      - "8501:8501"
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_BROKER: "kafka:9092"
      GROQ_API_KEY: "XXXXXXX"
    volumes:
      - ../outputs:/app/outputs # Maps outputs folder for PDF files
      - ../data:/app/data # Maps data input folder
    command: streamlit run main.py --server.port 8501 --server.address 0.0.0.0
